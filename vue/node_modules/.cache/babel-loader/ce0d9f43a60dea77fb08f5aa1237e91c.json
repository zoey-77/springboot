{"remainingRequest":"E:\\相关文档\\springboot\\vue\\node_modules\\babel-loader\\lib\\index.js!E:\\相关文档\\springboot\\vue\\src\\utils\\request.js","dependencies":[{"path":"E:\\相关文档\\springboot\\vue\\src\\utils\\request.js","mtime":1644654285173},{"path":"E:\\相关文档\\springboot\\vue\\babel.config.js","mtime":1642682271570},{"path":"E:\\相关文档\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1700305500064},{"path":"E:\\相关文档\\springboot\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1700305500802}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCByb3V0ZXIgZnJvbSAiQC9yb3V0ZXIiOwp2YXIgcmVxdWVzdCA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogJ2h0dHA6Ly9sb2NhbGhvc3Q6OTA5MCcsCiAgdGltZW91dDogNTAwMAp9KTsgLy8gcmVxdWVzdCDmi6bmiKrlmagKLy8g5Y+v5Lul6Ieq6K+35rGC5Y+R6YCB5YmN5a+56K+35rGC5YGa5LiA5Lqb5aSE55CGCi8vIOavlOWmgue7n+S4gOWKoHRva2Vu77yM5a+56K+35rGC5Y+C5pWw57uf5LiA5Yqg5a+GCgpyZXF1ZXN0LmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgY29uZmlnLmhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOCc7CiAgdmFyIHVzZXIgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlciIpID8gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlciIpKSA6IG51bGw7CgogIGlmICh1c2VyKSB7CiAgICBjb25maWcuaGVhZGVyc1sndG9rZW4nXSA9IHVzZXIudG9rZW47IC8vIOiuvue9ruivt+axguWktAogIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7IC8vIHJlc3BvbnNlIOaLpuaIquWZqAovLyDlj6/ku6XlnKjmjqXlj6Plk43lupTlkI7nu5/kuIDlpITnkIbnu5PmnpwKCnJlcXVlc3QuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICB2YXIgcmVzID0gcmVzcG9uc2UuZGF0YTsgLy8g5aaC5p6c5piv6L+U5Zue55qE5paH5Lu2CgogIGlmIChyZXNwb25zZS5jb25maWcucmVzcG9uc2VUeXBlID09PSAnYmxvYicpIHsKICAgIHJldHVybiByZXM7CiAgfSAvLyDlhbzlrrnmnI3liqHnq6/ov5Tlm57nmoTlrZfnrKbkuLLmlbDmja4KCgogIGlmICh0eXBlb2YgcmVzID09PSAnc3RyaW5nJykgewogICAgcmVzID0gcmVzID8gSlNPTi5wYXJzZShyZXMpIDogcmVzOwogIH0gLy8g5b2T5p2D6ZmQ6aqM6K+B5LiN6YCa6L+H55qE5pe25YCZ57uZ5Ye65o+Q56S6CgoKICBpZiAocmVzLmNvZGUgPT09ICc0MDEnKSB7CiAgICAvLyBFbGVtZW50VUkuTWVzc2FnZSh7CiAgICAvLyAgICAgbWVzc2FnZTogcmVzLm1zZywKICAgIC8vICAgICB0eXBlOiAnZXJyb3InCiAgICAvLyB9KTsKICAgIHJvdXRlci5wdXNoKCIvbG9naW4iKTsKICB9CgogIHJldHVybiByZXM7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIGNvbnNvbGUubG9nKCdlcnInICsgZXJyb3IpOyAvLyBmb3IgZGVidWcKCiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CmV4cG9ydCBkZWZhdWx0IHJlcXVlc3Q7"},{"version":3,"sources":["E:/相关文档/springboot/vue/src/utils/request.js"],"names":["axios","router","request","create","baseURL","timeout","interceptors","use","config","headers","user","localStorage","getItem","JSON","parse","token","error","Promise","reject","response","res","data","responseType","code","push","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAE,uBADgB;AAEzBC,EAAAA,OAAO,EAAE;AAFgB,CAAb,CAAhB,C,CAKA;AACA;AACA;;AACAH,OAAO,CAACI,YAAR,CAAqBJ,OAArB,CAA6BK,GAA7B,CAAiC,UAAAC,MAAM,EAAI;AACvCA,EAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,gCAAjC;AACA,MAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA+BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA/B,GAA0E,IAArF;;AACA,MAAIF,IAAJ,EAAU;AACNF,IAAAA,MAAM,CAACC,OAAP,CAAe,OAAf,IAA0BC,IAAI,CAACK,KAA/B,CADM,CACiC;AAC1C;;AAED,SAAOP,MAAP;AACH,CARD,EAQG,UAAAQ,KAAK,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAVD,E,CAYA;AACA;;AACAd,OAAO,CAACI,YAAR,CAAqBa,QAArB,CAA8BZ,GAA9B,CACI,UAAAY,QAAQ,EAAI;AACR,MAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB,CADQ,CAER;;AACA,MAAIF,QAAQ,CAACX,MAAT,CAAgBc,YAAhB,KAAiC,MAArC,EAA6C;AACzC,WAAOF,GAAP;AACH,GALO,CAMR;;;AACA,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzBA,IAAAA,GAAG,GAAGA,GAAG,GAAGP,IAAI,CAACC,KAAL,CAAWM,GAAX,CAAH,GAAqBA,GAA9B;AACH,GATO,CAUR;;;AACA,MAAIA,GAAG,CAACG,IAAJ,KAAa,KAAjB,EAAwB;AACpB;AACA;AACA;AACA;AACAtB,IAAAA,MAAM,CAACuB,IAAP,CAAY,QAAZ;AACH;;AACD,SAAOJ,GAAP;AACH,CApBL,EAqBI,UAAAJ,KAAK,EAAI;AACLS,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQV,KAApB,EADK,CACsB;;AAC3B,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAxBL;AA4BA,eAAed,OAAf","sourcesContent":["import axios from 'axios'\r\nimport router from \"@/router\";\r\n\r\nconst request = axios.create({\r\n    baseURL: 'http://localhost:9090',\r\n    timeout: 5000\r\n})\r\n\r\n// request 拦截器\r\n// 可以自请求发送前对请求做一些处理\r\n// 比如统一加token，对请求参数统一加密\r\nrequest.interceptors.request.use(config => {\r\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\r\n    let user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null\r\n    if (user) {\r\n        config.headers['token'] = user.token;  // 设置请求头\r\n    }\r\n\r\n    return config\r\n}, error => {\r\n    return Promise.reject(error)\r\n});\r\n\r\n// response 拦截器\r\n// 可以在接口响应后统一处理结果\r\nrequest.interceptors.response.use(\r\n    response => {\r\n        let res = response.data;\r\n        // 如果是返回的文件\r\n        if (response.config.responseType === 'blob') {\r\n            return res\r\n        }\r\n        // 兼容服务端返回的字符串数据\r\n        if (typeof res === 'string') {\r\n            res = res ? JSON.parse(res) : res\r\n        }\r\n        // 当权限验证不通过的时候给出提示\r\n        if (res.code === '401') {\r\n            // ElementUI.Message({\r\n            //     message: res.msg,\r\n            //     type: 'error'\r\n            // });\r\n            router.push(\"/login\")\r\n        }\r\n        return res;\r\n    },\r\n    error => {\r\n        console.log('err' + error) // for debug\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\n\r\nexport default request\r\n\r\n"]}]}