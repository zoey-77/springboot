{"remainingRequest":"E:\\20230724-至今\\xiaqing_code\\校园流浪猫管理系统\\springboot\\vue\\node_modules\\babel-loader\\lib\\index.js!E:\\20230724-至今\\xiaqing_code\\校园流浪猫管理系统\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\20230724-至今\\xiaqing_code\\校园流浪猫管理系统\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\20230724-至今\\xiaqing_code\\校园流浪猫管理系统\\springboot\\vue\\src\\views\\front\\Talk.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\20230724-至今\\xiaqing_code\\校园流浪猫管理系统\\springboot\\vue\\src\\views\\front\\Talk.vue","mtime":1707591206009},{"path":"E:\\20230724-至今\\xiaqing_code\\校园流浪猫管理系统\\springboot\\vue\\babel.config.js","mtime":1642682271570},{"path":"E:\\20230724-至今\\xiaqing_code\\校园流浪猫管理系统\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1700305500064},{"path":"E:\\20230724-至今\\xiaqing_code\\校园流浪猫管理系统\\springboot\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1700305500802},{"path":"E:\\20230724-至今\\xiaqing_code\\校园流浪猫管理系统\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1700305500064},{"path":"E:\\20230724-至今\\xiaqing_code\\校园流浪猫管理系统\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1700305500970}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHJlcXVlc3QgZnJvbSAiQC91dGlscy9yZXF1ZXN0IjsKdmFyIHNvY2tldDsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJJbSIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNpcmNsZVVybDogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLAogICAgICB1c2VyOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlciIpID8gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlciIpKSA6IHt9LAogICAgICBpc0NvbGxhcHNlOiBmYWxzZSwKICAgICAgdXNlcnM6IFtdLAogICAgICBjaGF0VXNlcjogJycsCiAgICAgIHRleHQ6ICIiLAogICAgICBtZXNzYWdlczogW10sCiAgICAgIGNvbnRlbnQ6ICcnCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLnVzZXIudXNlcm5hbWUgPT0gbnVsbCkgewogICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoIuivt+eZu+W9lSIpOwogICAgICByZXR1cm47CiAgICB9CgogICAgdGhpcy5pbml0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZW5kOiBmdW5jdGlvbiBzZW5kKCkgewogICAgICBpZiAoIXRoaXMuY2hhdFVzZXIpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJywKICAgICAgICAgIG1lc3NhZ2U6ICLor7fpgInmi6nogYrlpKnlr7nosaEiCiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAoIXRoaXMudGV4dCkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgdHlwZTogJ3dhcm5pbmcnLAogICAgICAgICAgbWVzc2FnZTogIuivt+i+k+WFpeWGheWuuSIKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAodHlwZW9mIFdlYlNvY2tldCA9PSAidW5kZWZpbmVkIikgewogICAgICAgICAgY29uc29sZS5sb2coIuaCqOeahOa1j+iniOWZqOS4jeaUr+aMgVdlYlNvY2tldCIpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zb2xlLmxvZygi5oKo55qE5rWP6KeI5Zmo5pSv5oyBV2ViU29ja2V0Iik7IC8vIOe7hOijheW+heWPkemAgeeahOa2iOaBryBqc29uCiAgICAgICAgICAvLyB7ImZyb20iOiAiemhhbmciLCAidG8iOiAiYWRtaW4iLCAidGV4dCI6ICLogYrlpKnmlofmnKwifQoKICAgICAgICAgIHZhciBtZXNzYWdlID0gewogICAgICAgICAgICBmcm9tOiB0aGlzLnVzZXIudXNlcm5hbWUsCiAgICAgICAgICAgIHRvOiB0aGlzLmNoYXRVc2VyLAogICAgICAgICAgICB0ZXh0OiB0aGlzLnRleHQKICAgICAgICAgIH07CiAgICAgICAgICBzb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeShtZXNzYWdlKSk7IC8vIOWwhue7hOijheWlveeahGpzb27lj5HpgIHnu5nmnI3liqHnq6/vvIznlLHmnI3liqHnq6/ov5vooYzovazlj5EKCiAgICAgICAgICB0aGlzLm1lc3NhZ2VzLnB1c2goewogICAgICAgICAgICB1c2VyOiB0aGlzLnVzZXIudXNlcm5hbWUsCiAgICAgICAgICAgIHRleHQ6IHRoaXMudGV4dAogICAgICAgICAgfSk7IC8vIOaehOW7uua2iOaBr+WGheWuue+8jOacrOS6uua2iOaBrwoKICAgICAgICAgIHRoaXMuY3JlYXRlQ29udGVudChudWxsLCB0aGlzLnVzZXIudXNlcm5hbWUsIHRoaXMudGV4dCk7CiAgICAgICAgICB0aGlzLnRleHQgPSAnJzsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVDb250ZW50OiBmdW5jdGlvbiBjcmVhdGVDb250ZW50KHJlbW90ZVVzZXIsIG5vd1VzZXIsIHRleHQpIHsKICAgICAgLy8g6L+Z5Liq5pa55rOV5piv55So5p2l5bCGIGpzb27nmoTogYrlpKnmtojmga/mlbDmja7ovazmjaLmiJAgaHRtbOeahOOAggogICAgICB2YXIgaHRtbDsgLy8g5b2T5YmN55So5oi35raI5oGvCgogICAgICBpZiAobm93VXNlcikgewogICAgICAgIC8vIG5vd1VzZXIg6KGo56S65piv5ZCm5pi+56S65b2T5YmN55So5oi35Y+R6YCB55qE6IGK5aSp5raI5oGv77yM57u/6Imy5rCU5rOhCiAgICAgICAgaHRtbCA9ICI8ZGl2IGNsYXNzPVwiZWwtcm93XCIgc3R5bGU9XCJwYWRkaW5nOiA1cHggMFwiPlxuIiArICIgIDxkaXYgY2xhc3M9XCJlbC1jb2wgZWwtY29sLTIyXCIgc3R5bGU9XCJ0ZXh0LWFsaWduOiByaWdodDsgcGFkZGluZy1yaWdodDogMTBweFwiPlxuIiArICIgICAgPGRpdiBjbGFzcz1cInRpcCBsZWZ0XCI+IiArIHRleHQgKyAiPC9kaXY+XG4iICsgIiAgPC9kaXY+XG4iICsgIiAgPGRpdiBjbGFzcz1cImVsLWNvbCBlbC1jb2wtMlwiPlxuIiArICIgIDxzcGFuIGNsYXNzPVwiZWwtYXZhdGFyIGVsLWF2YXRhci0tY2lyY2xlXCIgc3R5bGU9XCJoZWlnaHQ6IDQwcHg7IHdpZHRoOiA0MHB4OyBsaW5lLWhlaWdodDogNDBweDtcIj5cbiIgKyAiICAgIDxpbWcgc3JjPVwiaHR0cHM6Ly9jdWJlLmVsZW1lY2RuLmNvbS8zLzdjLzNlYTZiZWVjNjQzNjljMjY0MmI5MmM2NzI2ZjFlcG5nLnBuZ1wiIHN0eWxlPVwib2JqZWN0LWZpdDogY292ZXI7XCI+XG4iICsgIiAgPC9zcGFuPlxuIiArICIgIDwvZGl2PlxuIiArICI8L2Rpdj4iOwogICAgICB9IGVsc2UgaWYgKHJlbW90ZVVzZXIpIHsKICAgICAgICAvLyByZW1vdGVVc2Vy6KGo56S66L+c56iL55So5oi36IGK5aSp5raI5oGv77yM6JOd6Imy55qE5rCU5rOhCiAgICAgICAgaHRtbCA9ICI8ZGl2IGNsYXNzPVwiZWwtcm93XCIgc3R5bGU9XCJwYWRkaW5nOiA1cHggMFwiPlxuIiArICIgIDxkaXYgY2xhc3M9XCJlbC1jb2wgZWwtY29sLTJcIiBzdHlsZT1cInRleHQtYWxpZ246IHJpZ2h0XCI+XG4iICsgIiAgPHNwYW4gY2xhc3M9XCJlbC1hdmF0YXIgZWwtYXZhdGFyLS1jaXJjbGVcIiBzdHlsZT1cImhlaWdodDogNDBweDsgd2lkdGg6IDQwcHg7IGxpbmUtaGVpZ2h0OiA0MHB4O1wiPlxuIiArICIgICAgPGltZyBzcmM9XCJodHRwczovL2N1YmUuZWxlbWVjZG4uY29tLzMvN2MvM2VhNmJlZWM2NDM2OWMyNjQyYjkyYzY3MjZmMWVwbmcucG5nXCIgc3R5bGU9XCJvYmplY3QtZml0OiBjb3ZlcjtcIj5cbiIgKyAiICA8L3NwYW4+XG4iICsgIiAgPC9kaXY+XG4iICsgIiAgPGRpdiBjbGFzcz1cImVsLWNvbCBlbC1jb2wtMjJcIiBzdHlsZT1cInRleHQtYWxpZ246IGxlZnQ7IHBhZGRpbmctbGVmdDogMTBweFwiPlxuIiArICIgICAgPGRpdiBjbGFzcz1cInRpcCByaWdodFwiPiIgKyB0ZXh0ICsgIjwvZGl2PlxuIiArICIgIDwvZGl2PlxuIiArICI8L2Rpdj4iOwogICAgICB9CgogICAgICBjb25zb2xlLmxvZyhodG1sKTsKICAgICAgdGhpcy5jb250ZW50ICs9IGh0bWw7CiAgICB9LAogICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdGhpcy51c2VyID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXIiKSA/IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXIiKSkgOiB7fTsKICAgICAgdmFyIHVzZXJuYW1lID0gdGhpcy51c2VyLnVzZXJuYW1lOwoKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmICh0eXBlb2YgV2ViU29ja2V0ID09ICJ1bmRlZmluZWQiKSB7CiAgICAgICAgY29uc29sZS5sb2coIuaCqOeahOa1j+iniOWZqOS4jeaUr+aMgVdlYlNvY2tldCIpOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnNvbGUubG9nKCLmgqjnmoTmtY/op4jlmajmlK/mjIFXZWJTb2NrZXQiKTsKICAgICAgICB2YXIgc29ja2V0VXJsID0gIndzOi8vbG9jYWxob3N0OjkwOTAvaW1zZXJ2ZXIvIiArIHVzZXJuYW1lOwoKICAgICAgICBpZiAoc29ja2V0ICE9IG51bGwpIHsKICAgICAgICAgIHNvY2tldC5jbG9zZSgpOwogICAgICAgICAgc29ja2V0ID0gbnVsbDsKICAgICAgICB9IC8vIOW8gOWQr+S4gOS4qndlYnNvY2tldOacjeWKoQoKCiAgICAgICAgc29ja2V0ID0gbmV3IFdlYlNvY2tldChzb2NrZXRVcmwpOyAvL+aJk+W8gOS6i+S7tgoKICAgICAgICBzb2NrZXQub25vcGVuID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgY29uc29sZS5sb2coIndlYnNvY2tldOW3suaJk+W8gCIpOwogICAgICAgIH07IC8vICDmtY/op4jlmajnq6/mlLbmtojmga/vvIzojrflvpfku47mnI3liqHnq6/lj5HpgIHov4fmnaXnmoTmlofmnKzmtojmga8KCgogICAgICAgIHNvY2tldC5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAobXNnKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygi5pS25Yiw5pWw5o2uPT09PSIgKyBtc2cuZGF0YSk7CiAgICAgICAgICB2YXIgZGF0YSA9IEpTT04ucGFyc2UobXNnLmRhdGEpOyAvLyDlr7nmlLbliLDnmoRqc29u5pWw5o2u6L+b6KGM6Kej5p6Q77yMIOexu+S8vOi/meagt+eahO+8miB7InVzZXJzIjogW3sidXNlcm5hbWUiOiAiemhhbmcifSx7ICJ1c2VybmFtZSI6ICJhZG1pbiJ9XX0KCiAgICAgICAgICBpZiAoZGF0YS51c2VycykgewogICAgICAgICAgICAvLyDojrflj5blnKjnur/kurrlkZjkv6Hmga8KICAgICAgICAgICAgX3RoaXMudXNlcnMgPSBkYXRhLnVzZXJzLmZpbHRlcihmdW5jdGlvbiAodXNlcikgewogICAgICAgICAgICAgIHJldHVybiB1c2VyLnVzZXJuYW1lICE9PSB1c2VybmFtZTsKICAgICAgICAgICAgfSk7IC8vIOiOt+WPluW9k+WJjei/nuaOpeeahOaJgOacieeUqOaIt+S/oeaBr++8jOW5tuS4lOaOkumZpOiHqui6q++8jOiHquW3seS4jeS8muWHuueOsOWcqOiHquW3seeahOiBiuWkqeWIl+ihqOmHjAogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8g5aaC5p6c5pyN5Yqh5Zmo56uv5Y+R6YCB6L+H5p2l55qEanNvbuaVsOaNriDkuI3ljIXlkKsgdXNlcnMg6L+Z5Liqa2V577yM6YKj5LmI5Y+R6YCB6L+H5p2l55qE5bCx5piv6IGK5aSp5paH5pysanNvbuaVsOaNrgogICAgICAgICAgICAvLyAgLy8geyJmcm9tIjogInpoYW5nIiwgInRleHQiOiAiaGVsbG8ifQogICAgICAgICAgICBpZiAoZGF0YS5mcm9tID09PSBfdGhpcy5jaGF0VXNlcikgewogICAgICAgICAgICAgIF90aGlzLm1lc3NhZ2VzLnB1c2goZGF0YSk7IC8vIOaehOW7uua2iOaBr+WGheWuuQoKCiAgICAgICAgICAgICAgX3RoaXMuY3JlYXRlQ29udGVudChkYXRhLmZyb20sIG51bGwsIGRhdGEudGV4dCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9OyAvL+WFs+mXreS6i+S7tgoKCiAgICAgICAgc29ja2V0Lm9uY2xvc2UgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygid2Vic29ja2V05bey5YWz6ZetIik7CiAgICAgICAgfTsgLy/lj5HnlJ/kuobplJnor6/kuovku7YKCgogICAgICAgIHNvY2tldC5vbmVycm9yID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgY29uc29sZS5sb2coIndlYnNvY2tldOWPkeeUn+S6humUmeivryIpOwogICAgICAgIH07CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["Talk.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAA,OAAA,MAAA,iBAAA;AACA,IAAA,MAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,IADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,qEADA;AAEA,MAAA,IAAA,EAAA,YAAA,CAAA,OAAA,CAAA,MAAA,IAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,GAAA,EAFA;AAGA,MAAA,UAAA,EAAA,KAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,QAAA,EAAA,EALA;AAMA,MAAA,IAAA,EAAA,EANA;AAOA,MAAA,QAAA,EAAA,EAPA;AAQA,MAAA,OAAA,EAAA;AARA,KAAA;AAUA,GAbA;AAcA,EAAA,OAdA,qBAcA;AACA,QAAA,KAAA,IAAA,CAAA,QAAA,IAAA,IAAA,EAAA;AACA,WAAA,QAAA,CAAA,OAAA,CAAA,KAAA;AACA;AACA;;AAEA,SAAA,IAAA;AACA,GArBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,UAAA,CAAA,KAAA,QAAA,EAAA;AACA,aAAA,QAAA,CAAA;AAAA,UAAA,IAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA;AACA;AACA;;AACA,UAAA,CAAA,KAAA,IAAA,EAAA;AACA,aAAA,QAAA,CAAA;AAAA,UAAA,IAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA;AACA,OAFA,MAEA;AACA,YAAA,OAAA,SAAA,IAAA,WAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,mBAAA;AACA,SAFA,MAEA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,kBAAA,EADA,CAEA;AACA;;AACA,cAAA,OAAA,GAAA;AAAA,YAAA,IAAA,EAAA,KAAA,IAAA,CAAA,QAAA;AAAA,YAAA,EAAA,EAAA,KAAA,QAAA;AAAA,YAAA,IAAA,EAAA,KAAA;AAAA,WAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,SAAA,CAAA,OAAA,CAAA,EALA,CAKA;;AACA,eAAA,QAAA,CAAA,IAAA,CAAA;AAAA,YAAA,IAAA,EAAA,KAAA,IAAA,CAAA,QAAA;AAAA,YAAA,IAAA,EAAA,KAAA;AAAA,WAAA,EANA,CAOA;;AACA,eAAA,aAAA,CAAA,IAAA,EAAA,KAAA,IAAA,CAAA,QAAA,EAAA,KAAA,IAAA;AACA,eAAA,IAAA,GAAA,EAAA;AACA;AACA;AACA,KAvBA;AAwBA,IAAA,aAxBA,yBAwBA,UAxBA,EAwBA,OAxBA,EAwBA,IAxBA,EAwBA;AAAA;AACA,UAAA,IAAA,CADA,CAEA;;AACA,UAAA,OAAA,EAAA;AAAA;AACA,QAAA,IAAA,GAAA,sDACA,uFADA,GAEA,8BAFA,GAEA,IAFA,GAEA,UAFA,GAGA,YAHA,GAIA,qCAJA,GAKA,0GALA,GAMA,sHANA,GAOA,aAPA,GAQA,YARA,GASA,QATA;AAUA,OAXA,MAWA,IAAA,UAAA,EAAA;AAAA;AACA,QAAA,IAAA,GAAA,sDACA,iEADA,GAEA,0GAFA,GAGA,sHAHA,GAIA,aAJA,GAKA,YALA,GAMA,qFANA,GAOA,+BAPA,GAOA,IAPA,GAOA,UAPA,GAQA,YARA,GASA,QATA;AAUA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,WAAA,OAAA,IAAA,IAAA;AACA,KApDA;AAqDA,IAAA,IArDA,kBAqDA;AACA,WAAA,IAAA,GAAA,YAAA,CAAA,OAAA,CAAA,MAAA,IAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,GAAA,EAAA;AACA,UAAA,QAAA,GAAA,KAAA,IAAA,CAAA,QAAA;;AACA,UAAA,KAAA,GAAA,IAAA;;AACA,UAAA,OAAA,SAAA,IAAA,WAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,mBAAA;AACA,OAFA,MAEA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,kBAAA;AACA,YAAA,SAAA,GAAA,kCAAA,QAAA;;AACA,YAAA,MAAA,IAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA;AACA,UAAA,MAAA,GAAA,IAAA;AACA,SANA,CAOA;;;AACA,QAAA,MAAA,GAAA,IAAA,SAAA,CAAA,SAAA,CAAA,CARA,CASA;;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,YAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA,SAFA,CAVA,CAaA;;;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,UAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,aAAA,GAAA,CAAA,IAAA;AACA,cAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAFA,CAEA;;AACA,cAAA,IAAA,CAAA,KAAA,EAAA;AAAA;AACA,YAAA,KAAA,CAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,qBAAA,IAAA,CAAA,QAAA,KAAA,QAAA;AAAA,aAAA,CAAA,CADA,CACA;AACA,WAFA,MAEA;AACA;AACA;AACA,gBAAA,IAAA,CAAA,IAAA,KAAA,KAAA,CAAA,QAAA,EAAA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA,EADA,CAEA;;;AACA,cAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA,IAAA;AACA;AACA;AACA,SAdA,CAdA,CA6BA;;;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,YAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA,SAFA,CA9BA,CAiCA;;;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,YAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,gBAAA;AACA,SAFA;AAGA;AACA;AAjGA;AAtBA,CAAA","sourcesContent":["<template>\r\n  <div style=\"padding: 10px; margin-bottom: 50px;width: 1200px\">\r\n    <el-row>\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"width: 300px; height: 300px; color: #333\">\r\n          <div style=\"padding-bottom: 10px; border-bottom: 1px solid #ccc\">在线用户<span style=\"font-size: 12px\">（点击聊天气泡开始聊天）</span></div>\r\n          <div style=\"padding: 10px 0\" v-for=\"user in users\" :key=\"user.username\">\r\n            <span>{{ user.username }}</span>\r\n            <i class=\"el-icon-chat-dot-round\" style=\"margin-left: 10px; font-size: 16px; cursor: pointer\"\r\n               @click=\"chatUser = user.username\"></i>\r\n            <span style=\"font-size: 12px;color: limegreen; margin-left: 5px\" v-if=\"user.username === chatUser\">chatting...</span>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"18\">\r\n        <div style=\"width: 800px; margin: 0 auto; background-color: white;\r\n                    border-radius: 5px; box-shadow: 0 0 10px #ccc\">\r\n          <div style=\"text-align: center; line-height: 50px;\">\r\n            在线聊天（{{ chatUser }}）\r\n          </div>\r\n          <div style=\"height: 350px; overflow:auto; border-top: 1px solid #ccc\" v-html=\"content\"></div>\r\n          <div style=\"height: 200px\">\r\n            <textarea v-model=\"text\" style=\"height: 160px; width: 100%; padding: 20px; border: none; border-top: 1px solid #ccc;\r\n             border-bottom: 1px solid #ccc; outline: none\"></textarea>\r\n            <div style=\"text-align: right; padding-right: 10px\">\r\n              <el-button type=\"primary\" size=\"mini\" @click=\"send\">发送</el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n<script>\r\nimport request from \"@/utils/request\";\r\nlet socket;\r\nexport default {\r\n  name: \"Im\",\r\n  data() {\r\n    return {\r\n      circleUrl: 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png',\r\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\r\n      isCollapse: false,\r\n      users: [],\r\n      chatUser: '',\r\n      text: \"\",\r\n      messages: [],\r\n      content: ''\r\n    }\r\n  },\r\n  created() {\r\n    if (this.user.username == null){\r\n      this.$message.warning(\"请登录\")\r\n      return;\r\n    }\r\n\r\n    this.init()\r\n  },\r\n  methods: {\r\n    send() {\r\n      if (!this.chatUser) {\r\n        this.$message({type: 'warning', message: \"请选择聊天对象\"})\r\n        return;\r\n      }\r\n      if (!this.text) {\r\n        this.$message({type: 'warning', message: \"请输入内容\"})\r\n      } else {\r\n        if (typeof (WebSocket) == \"undefined\") {\r\n          console.log(\"您的浏览器不支持WebSocket\");\r\n        } else {\r\n          console.log(\"您的浏览器支持WebSocket\");\r\n          // 组装待发送的消息 json\r\n          // {\"from\": \"zhang\", \"to\": \"admin\", \"text\": \"聊天文本\"}\r\n          let message = {from: this.user.username, to: this.chatUser, text: this.text}\r\n          socket.send(JSON.stringify(message));  // 将组装好的json发送给服务端，由服务端进行转发\r\n          this.messages.push({user: this.user.username, text: this.text})\r\n          // 构建消息内容，本人消息\r\n          this.createContent(null, this.user.username, this.text)\r\n          this.text = '';\r\n        }\r\n      }\r\n    },\r\n    createContent(remoteUser, nowUser, text) {  // 这个方法是用来将 json的聊天消息数据转换成 html的。\r\n      let html\r\n      // 当前用户消息\r\n      if (nowUser) { // nowUser 表示是否显示当前用户发送的聊天消息，绿色气泡\r\n        html = \"<div class=\\\"el-row\\\" style=\\\"padding: 5px 0\\\">\\n\" +\r\n            \"  <div class=\\\"el-col el-col-22\\\" style=\\\"text-align: right; padding-right: 10px\\\">\\n\" +\r\n            \"    <div class=\\\"tip left\\\">\" + text + \"</div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"  <div class=\\\"el-col el-col-2\\\">\\n\" +\r\n            \"  <span class=\\\"el-avatar el-avatar--circle\\\" style=\\\"height: 40px; width: 40px; line-height: 40px;\\\">\\n\" +\r\n            \"    <img src=\\\"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\\\" style=\\\"object-fit: cover;\\\">\\n\" +\r\n            \"  </span>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</div>\";\r\n      } else if (remoteUser) {   // remoteUser表示远程用户聊天消息，蓝色的气泡\r\n        html = \"<div class=\\\"el-row\\\" style=\\\"padding: 5px 0\\\">\\n\" +\r\n            \"  <div class=\\\"el-col el-col-2\\\" style=\\\"text-align: right\\\">\\n\" +\r\n            \"  <span class=\\\"el-avatar el-avatar--circle\\\" style=\\\"height: 40px; width: 40px; line-height: 40px;\\\">\\n\" +\r\n            \"    <img src=\\\"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\\\" style=\\\"object-fit: cover;\\\">\\n\" +\r\n            \"  </span>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"  <div class=\\\"el-col el-col-22\\\" style=\\\"text-align: left; padding-left: 10px\\\">\\n\" +\r\n            \"    <div class=\\\"tip right\\\">\" + text + \"</div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</div>\";\r\n      }\r\n      console.log(html)\r\n      this.content += html;\r\n    },\r\n    init() {\r\n      this.user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\r\n      let username = this.user.username;\r\n      let _this = this;\r\n      if (typeof (WebSocket) == \"undefined\") {\r\n        console.log(\"您的浏览器不支持WebSocket\");\r\n      } else {\r\n        console.log(\"您的浏览器支持WebSocket\");\r\n        let socketUrl = \"ws://localhost:9090/imserver/\" + username;\r\n        if (socket != null) {\r\n          socket.close();\r\n          socket = null;\r\n        }\r\n        // 开启一个websocket服务\r\n        socket = new WebSocket(socketUrl);\r\n        //打开事件\r\n        socket.onopen = function () {\r\n          console.log(\"websocket已打开\");\r\n        };\r\n        //  浏览器端收消息，获得从服务端发送过来的文本消息\r\n        socket.onmessage = function (msg) {\r\n          console.log(\"收到数据====\" + msg.data)\r\n          let data = JSON.parse(msg.data)  // 对收到的json数据进行解析， 类似这样的： {\"users\": [{\"username\": \"zhang\"},{ \"username\": \"admin\"}]}\r\n          if (data.users) {  // 获取在线人员信息\r\n            _this.users = data.users.filter(user => user.username !== username)  // 获取当前连接的所有用户信息，并且排除自身，自己不会出现在自己的聊天列表里\r\n          } else {\r\n            // 如果服务器端发送过来的json数据 不包含 users 这个key，那么发送过来的就是聊天文本json数据\r\n            //  // {\"from\": \"zhang\", \"text\": \"hello\"}\r\n            if (data.from === _this.chatUser) {\r\n              _this.messages.push(data)\r\n              // 构建消息内容\r\n              _this.createContent(data.from, null, data.text)\r\n            }\r\n          }\r\n        };\r\n        //关闭事件\r\n        socket.onclose = function () {\r\n          console.log(\"websocket已关闭\");\r\n        };\r\n        //发生了错误事件\r\n        socket.onerror = function () {\r\n          console.log(\"websocket发生了错误\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.tip {\r\n  color: white;\r\n  text-align: center;\r\n  border-radius: 10px;\r\n  font-family: sans-serif;\r\n  padding: 10px;\r\n  width:auto;\r\n  display:inline-block !important;\r\n  display:inline;\r\n}\r\n.right {\r\n  background-color: deepskyblue;\r\n}\r\n.left {\r\n  background-color: forestgreen;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/front"}]}